{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vlaue","vote_average","directors","length","calcTime","time","hours","Math","floor","mins","MovieInfoBar","money","budget","Intl","NumberFormat","currency","minimumFractionDigits","format","revenue","Actor","actor","profile_path","character","Movie","actors","console","log","status_code","match","params","crew","filter","member","job","cast","catch","error","location","runtime","NotFound","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c87fb87.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"rmdb-header\">\n      <div className=\"rmdb-header-content\">\n        <Link to=\"/\">\n        <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-movie\" />\n        </Link>\n        <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"rmdb-movie\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = (props) => {\n\n    return(\n        <div className=\"rmdb-heroimage\"\n            style={{\n                background:\n                `linear-gradient(to bottom, rgba(0, 0, 0, 0)\n                39%, rgba(0, 0, 0, 0)\n                41%, rgba(0, 0, 0, 0.65)\n                100%),\n                url('${props.image}'), #1c1c1c`\n            }}\n        >\n            <div className=\"rmdb-heroimage-content\">\n                <div className=\"rmdb-heroimage-text\">\n                    <h1>{props.title}</h1>\n                    <p>{props.text}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroImage;","import React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n    state = {\n        value: ''\n    }\n\n    timeout = null;\n\n    doSearch = (event) => {\n        this.setState({ value: event.target.value })\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout( () => {\n            this.props.callback(this.state.value);\n        }, 500);\n\n    }\n\n    render (){\n        return (\n            <div className=\"rmdb-searchbar\">\n                <div className=\"rmdb-searchbar-content\">\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n                    <input\n                        type=\"text\"\n                        className=\"rmdb-searchbar-input\"\n                        placeholder=\"Search\"\n                        onChange={this.doSearch}\n                        value={this.state.value}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './FourColGrid.css';\nimport PropTypes from 'prop-types';\n\nconst FourColGrid = (props) => {\n    \n    const renderElements = () => {\n        const gridElements = props.children.map((element, i) => {\n            return (\n                <div key={i} className=\"rmdb-grid-element\">\n                    {element}\n                </div>\n            )\n        })\n        return gridElements;\n    }\n\n\n    return (\n        <div className=\"rmdb-grid\">\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n            <div className=\"rmdb-grid-content\">\n                {renderElements()}\n\n            </div>\n        </div>\n    )\n}\n\nFourColGrid.propTypes = {\n    header: PropTypes.string,\n    loader: PropTypes.bool\n}\n\nexport default FourColGrid;","import React from 'react';\nimport './MovieThumb.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieThumb = (props) => {\n  return (\n    <div className=\"rmdb-moviethumb\">\n      {\n        props.clickable\n          ?\n          <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}` }}>\n            <img src={props.image} alt=\"moviethumb\" />\n          </Link>\n          :\n          <img src={props.image} alt=\"moviethumb\" />\n      }\n    </div>\n  )\n}\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string\n}\n\n\nexport default MovieThumb;","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = (props) => {\n    return (\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\n            <p>{props.text}</p>\n        </div>\n    )\n}\n\nexport default LoadMoreBtn;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"loader\">\n\n        </div>\n    )\n}\n\nexport default Spinner;","import React, { Component } from \"react\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from \"../../config\";\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('HomeState')) {\n      const state = JSON.parse(localStorage.getItem('HomeState'));\n      this.setState({...state});\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = searchTerm => {\n    /* Search bar will be blank as default */\n    // console.log(searchTerm);\n    let endpoint = \"\";\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n\n    this.fetchItems(endpoint);\n  };\n\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({ loading: true });\n\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n        .state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\n        this.state.searchTerm\n      }&page=${this.state.currentPage + 1}`;\n    }\n\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          if(this.state.searchTerm === \"\") {\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        })\n      })\n  }\n  render() {\n    return (\n      <div className=\"rmdb-home\">\n        {/* check if state hero image exists, if null show nothing  */}\n        {this.state.heroImage ? (\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\n              title={this.state.heroImage.original_title}\n              text={this.state.heroImage.overview}\n            />\n\n            <SearchBar callback={this.searchItems} />\n          </div>\n        ) : null}\n        <div className=\"rmdb-home-grid\">\n          <FourColGrid\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\n            loading={this.state.loading}\n          >\n            {this.state.movies.map((element, i) => {\n              return (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={\n                    element.poster_path\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\n                      : \"./images/no_image.jpg\"\n                  }\n                  movieId={element.id}\n                  movieName={element.original_title}\n                />\n              )\n            })}\n          </FourColGrid>\n\n          {this.state.loading ? <Spinner /> : null}\n\n          {this.state.currentPage <= this.state.totalPages &&\n          !this.state.loading ? (\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n          ) : null }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nconst Navigation = props => {\n  return (\n  <div className=\"rmdb-navigation\">\n    <div className=\"rmdb-navigation-content\">\n      <Link to=\"/\">\n      <p>Home</p>\n      </Link>\n      <p>/</p>\n      <p>{props.movie}</p>\n    \n    </div>\n  \n  </div>\n  )\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\n\nconst MovieInfo = props => {\n  return (\n    <div className=\"rmdb-movieinfo\"\n      style={{\n        background: props.movie.backdrop_path\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\n          : '#000'\n      }}\n    >\n      <div className=\"rmdb-movieinfo-content\">\n        <div className=\"rmdb-movieinfo-thumb\">\n          <MovieThumb\n            image={\n              props.movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.movie.poster_path}`\n                : './images/no_image.jpg'\n            }\n            clickable={false}\n          /></div>\n          <div className=\"rmdb-movieinfo-text\">\n            <h1>{props.movie.title}</h1>\n            <h3>PLOT</h3>\n            <p>{props.movie.overview}</p>\n            <h3>IMDB RATING</h3>\n            <div className=\"rmdb-rating\">\n              <meter\n                min=\"0\"\n                max=\"100\"\n                optimum=\"100\"\n                low=\"40\"\n                high=\"70\"\n                vlaue={props.movie.vote_average * 10}\n              ></meter>\n              <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n            </div>\n            {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n            {props.directors.map((element, i) => {\n              return  <p key={i} className=\"rmdb-director\">{element.name}</p>\n            })}\n          </div>\n          <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n        </div>\n      </div>\n  )\n}\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar = (props) => {\n    return (\n        <div className=\"rmdb-movieinfobar\">\n            <div className=\"rmdb-movieinfobar-content\">\n                <div className=\"rmdb-movieinfobar-content-col\">\n                    <FontAwesome className=\"fa fa-time\" name=\"clock-o\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Running Time: {calcTime(props.time)}</span>\n                </div>\n                <div className=\"rmdb-movieinfobar-content-col\">\n                    <FontAwesome className=\"fa fa-budget\" name=\"money\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\n                </div>\n                <div className=\"rmdb-movieinfobar-content-col\">\n                    <FontAwesome className=\"fa fa-revenue\" name=\"ticket\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {calcTime(props.revenue)}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieInfoBar;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../../config';\nimport './Actor.css';\n\nconst Actor = (props) => {\n\n    const POSTER_SIZE = \"w154\";\n\n    return (\n        <div className=\"rmdb-actor\">\n            <img src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'} alt=\"actorthumb\"/>\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\n        </div>\n    )\n}\n\nexport default Actor;","import React, { Component } from \"react\";\nimport {API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\n      const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\n      this.setState({...state})\n    } else {\n      this.setState({ loading: true })\n      // FETCH DATA FIRST ...\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n\n    }\n  }\n\n  fetchItems = (endpoint) => {\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n      console.log(result);\n      if (result.status_code) {\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result }, () => {\n          // Fetching actors in the setState callback function\n          const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\n          fetch(endpoint)\n          .then(result => result.json())\n          .then(result => {\n            const directors = result.crew.filter((member) => member.job === \"Director\");\n            this.setState({\n              actors: result.cast,\n              directors,\n              loading: false\n            }, () => {\n              localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\n            })\n          })\n        })\n      }\n\n    })\n    .catch(error => console.error('Error: ', error))\n  }\n\n\n  render() {\n    return (\n\n    <div className=\"rmdb-movie\">\n      {\n        this.state.movie \n        ? \n        <div>\n          <Navigation movie={this.props.location.movieName} />\n          <MovieInfo movie={this.state.movie} directors={this.state.directors} />\n          <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\n        </div>\n        : null \n      }\n\n      {this.state.actors \n      ?\n      <div className=\"rmdb-movie-grid\">\n        <FourColGrid header={'Actors'}>\n          {this.state.actors.map( (element, i) => {\n            return <Actor key={i} actor={element} />\n          })}\n        </FourColGrid>\n      </div>\n      : null }\n      {!this.state.actors && !this.state.loading ? <h1>No Information Found!</h1> : null}\n      {this.state.loading ? <Spinner /> : null}\n    </div>\n    )\n  }\n}\n\nexport default Movie;\n","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1>Sorry, This information does not exist</h1>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"../elements/Header/Header\";\nimport Home from \"../Home/Home\";\nimport Movie from '../Movie/Movie'\nimport NotFound from '../elements/NotFound/NotFound';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/ReactMovieApp\">\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/:movieId\" component={Movie} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App'\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}